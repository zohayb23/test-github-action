name: Test OSPS Security Assessment Action

on:
  workflow_dispatch:
    inputs:
      target_owner:
        description: 'Target repository owner (organization or user)'
        required: true
        default: 'zohayb23'
      target_repo:
        description: 'Target repository name to assess'
        required: true
        default: 'test-github-action'
      catalog:
        description: 'OSPS catalog to assess against'
        required: false
        default: 'OSPS_B'
      maturity_level:
        description: 'Maturity level to assess'
        required: false
        default: 'Maturity Level 1'
        type: choice
        options:
          - 'Maturity Level 1'
          - 'Maturity Level 2'
          - 'Maturity Level 3'
      log_level:
        description: 'Log level'
        required: false
        default: 'debug'
        type: choice
        options:
          - 'info'
          - 'debug'
          - 'trace'
      output_format:
        description: 'Output format'
        required: false
        default: 'yaml'
        type: choice
        options:
          - 'yaml'
          - 'json'

jobs:
  test-osps-action:
    runs-on: ubuntu-latest
    name: Test OSPS Security Assessment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run OSPS Security Assessment
        uses: revanite-io/pvtr-github-repo-action@main
        with:
          owner: ${{ inputs.target_owner }}
          repo: ${{ inputs.target_repo }}
          token: ${{ secrets.GITHUB_TOKEN }}
          catalog: ${{ inputs.catalog }}
          maturity-level: ${{ inputs.maturity_level }}
          log-level: ${{ inputs.log_level }}
          output-format: ${{ inputs.output_format }}
          upload-sarif: 'false'

      - name: Create test SARIF file for testing
        shell: bash
        if: always()
        run: |
          echo "🧪 Creating test SARIF file to test upload functionality..."
          mkdir -p evaluation_results

          # Create a minimal valid SARIF file for testing
          cat > evaluation_results/test-results.sarif << 'EOF'
          {
            "version": "2.1.0",
            "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
            "runs": [
              {
                "tool": {
                  "driver": {
                    "name": "OSPS Security Assessment",
                    "version": "1.0.0",
                    "informationUri": "https://github.com/revanite-io/pvtr-github-repo-action"
                  }
                },
                "results": [
                  {
                    "ruleId": "OSPS-AC-03.01",
                    "message": {
                      "text": "Branch protection rule does not restrict pushes or require approving reviews"
                    },
                    "level": "warning",
                    "locations": [
                      {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "repository"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF

          echo "✅ Test SARIF file created at evaluation_results/test-results.sarif"

      - name: Test SARIF Upload to Security Tab
        shell: bash
        run: |
          echo "🔍 Testing SARIF upload functionality..."
          SARIF_FILE=$(find evaluation_results -name "*.sarif" -type f 2>/dev/null | head -1)

          if [ -n "$SARIF_FILE" ] && [ -f "$SARIF_FILE" ]; then
            echo "✅ SARIF file found: $SARIF_FILE"
            echo "📄 SARIF file contents:"
            head -20 "$SARIF_FILE"
          else
            echo "❌ No SARIF file found for testing"
            exit 1
          fi

      - name: Upload SARIF to GitHub Security Tab (Test)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: evaluation_results/test-results.sarif
          wait-for-processing: true
        continue-on-error: true

      - name: Upload Assessment Results
        uses: actions/upload-artifact@v4
        with:
          name: osps-assessment-results-${{ github.run_number }}
          path: evaluation_results/
          retention-days: 30

      - name: Display Results Summary
        run: |
          echo "✅ OSPS Security Assessment completed!"
          echo "📊 Results saved to: evaluation_results/"
          echo ""
          echo "🔍 Checking current directory structure:"
          ls -la
          echo ""
          echo "🔍 Checking for evaluation_results directory:"
          if [ -d "evaluation_results" ]; then
            echo "📁 Files generated:"
            ls -la evaluation_results/
            echo ""
            echo "📄 Summary of results:"
            find evaluation_results -name "*.yaml" -o -name "*.json" | head -5 | while read file; do
              echo "File: $file"
              if [[ "$file" == *.yaml ]]; then
                echo "First few lines:"
                head -10 "$file"
              fi
              echo "---"
            done
          else
            echo "❌ evaluation_results directory not found!"
            echo "🔍 Looking for any files that might contain results:"
            find . -name "*result*" -o -name "*assessment*" -o -name "*.yaml" -o -name "*.json" | head -10
          fi
